# -*- coding: utf-8 -*-
"""python_programming_and_data_analysis_ch03_05

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-v_DOQXdrBhOSgWaSk3dgAyDirGkRfEe

## 3.5 データ可視化

### 共通処理
"""

# 日本語化ライブラリ導入
!pip install japanize-matplotlib | tail -n 1

# ライブラリのimport

# NumPy用ライブラリ
import numpy as np

# Matplotlib中のpyplotライブラリのインポート
import matplotlib.pyplot as plt

# matplotlib日本語化対応ライブラリのインポート
import japanize_matplotlib

# pandas用ライブラリ
import pandas as pd

# データフレーム表示用関数
from IPython.display import display

# 表示オプション調整

# NumPy表示形式の設定
np.set_printoptions(
    suppress=True, precision=4, floatmode='fixed'
)

# グラフのデフォルトフォント指定
plt.rcParams["font.size"] = 14

# サイズ設定
plt.rcParams['figure.figsize'] = (6, 6)

# 方眼表示ON
plt.rcParams['axes.grid'] = True


# データフレームでの表示精度
pd.options.display.float_format = '{:.4f}'.format

# データフレームですべての項目を表示
pd.set_option("display.max_columns",None)

"""###  3.5.1 CSVファイルの読み込み"""

url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.data.version1'
cols_jp = [
    'ID', '川コード', '位置', '竣工年', '目的', '長さ', '車線数', '垂直クリアランス',
    '道路位置', '建築資材', '長さ区分', '相対長', '橋種別'
]

# データ読み込み
df = pd.read_csv(
    url, header=None,
    names=colｓ_jp, na_values='?',
    index_col='ID')

display(df.head())

"""### 3.5.2 ヒストグラム(hist メソッド)"""

# 数値項目のヒストグラム表示(簡易版)
df.hist()
plt.show()

# 数値項目のヒストグラム表示(見た目を配慮した版)
plt.rcParams['figure.figsize'] = (15, 4)
df.hist(bins=20, layout=(1, 4))
plt.tight_layout()
plt.show()

"""### 3.5.3 棒グラフによる頻度表示(plotメソッド)"""

# 「長さ区分」の頻度表示
plt.rcParams['figure.figsize'] = (4, 4)
c = '長さ区分'
df[c].value_counts().plot(kind='bar', title=c)
plt.show()

# データフレームの項目名を抽出
col = df.columns

# データ型がobjectの項目のみ抽出
col2 = col[df.dtypes == object]

# データフレームを該当列のみに絞り込み
df2 = df[col2]

# 結果確認
display(df2.head(2))

# ループを回して全カテゴリ項目で頻度表示をする

# グラフ描画領域の調整
plt.rcParams['figure.figsize'] = (12, 8)

# 対象項目の絞り込み
df2 = df[df.columns[df.dtypes == object]]

# ループ処理で、ヒストグラムの表示
for i, c in enumerate(df2.columns):
    ax = plt.subplot(2, 4, i+1)
    df2[c].value_counts().plot(
        kind='bar', title=c, ax=ax)
# レイアウトの調整
plt.tight_layout()
plt.show()

""" ### 3.5.4 箱ひげ図(boxplot関数)"""

# seabornのインポート
import seaborn as sns

# 箱ひげ図の描画
plt.rcParams['figure.figsize'] = (6, 6)
sns.boxplot(
    x='建築資材', y='竣工年', data=df,
    order=['WOOD', 'IRON', 'STEEL'])
plt.title('建築資材と竣工年の関係')
plt.show()

"""### 3.5.5 散布図(scatterplot関数)"""

# scatterplot関数による散布図
plt.rcParams['figure.figsize'] = (6, 6)
sns.scatterplot(
    x='竣工年', y='長さ', data=df, hue='建築資材',
    hue_order=['WOOD', 'IRON', 'STEEL'],
    s=150, style='建築資材')
plt.title('竣工年と長さの関係')
plt.show()

"""### 3.5.6 ヒストグラム(histplot関数)"""

# 竣工年による建築資材の推移
plt.rcParams['figure.figsize'] = (8, 4)
sns.histplot(
    data=df,  x='竣工年', hue='建築資材',
    palette=['blue', 'cyan', 'grey'], multiple='dodge',
    shrink=0.7)
plt.title('竣工年による建築資材の推移')
plt.show()

"""### 3.5.7 ヒートマップ(heatmap関数)"""

# クロス集計表の生成
pv = pd.crosstab(
    index=df['長さ区分'], columns=df['橋種別'])
display(pv)

# ヒートマップ表示
plt.rcParams['figure.figsize'] = (6, 6)
sns.heatmap(
    pv,square=True,annot=True,
    fmt='d',cmap='Blues', cbar=False)
xlabel = pv.columns.name
ylabel = pv.index.name
plt.title(xlabel+ ' vs '+ylabel)
plt.xlabel(xlabel)
plt.ylabel(ylabel)
plt.show()

"""### 演習問題

(1) 「目的」と「橋種別」を軸とする出現頻度のクロス集計表を作り、結果を dispaly関数で表示して下さい。

(2) (1)で作ったクロス集計表をヒートマップ表示して下さい。
"""

# (1) 「目的」と「橋種別」を軸とする出現頻度のクロス集計表

pv =

display(pv)

# (2) (1)で作ったクロス集計表のヒートマップ表示






plt.show()